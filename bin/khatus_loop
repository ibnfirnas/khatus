#! /bin/bash

MSG_TAG_SEP=': '

produce_weather() {
    metar -d "$WEATHER_STATION_ID" 2>&1 \
    | awk '
        /METAR pattern not found in NOAA data/ {
            failures++
        }

        /^Temperature/ {
            celsius = $3;
            fahrenheit = (celsius * (9 / 5)) + 32;
            temperature = fahrenheit
        }

        END {
            if (failures > 0) {
                temperature = "--"
            }
            print temperature "Â°F"
        }'
}

produce_datetime() {
    date +'%a %b %d %H:%M:%S'
}

consume() {
    pipe="$1"
    tail -f "$pipe" \
    | stdbuf -o L awk \
        '
            /^in:WEATHER:/\
            {
                db["weather_temperature"] = read_msg()
            }

            /^in:DATE_TIME:/\
            {
                db["datetime"] = read_msg()
            }

            /^out:BAR:/\
            {
                print make_bar()
            }

            function read_msg() {
                sub("^" $1 " +", "")
                return $0
            }

            function make_bar(    position, bar, i) {
                position[++i] = db["weather_temperature"]
                position[++i] = db["datetime"]
                bar = ""
                sep = ""
                for (j = 1; j <= i; j++) {
                    bar = bar sep position[j]
                    sep = " "
                }
                return bar
            }
        '
}

produce_bar_req() {
    echo ''
}

spawn() {
    cmd="$1"
    pipe="$2"
    tag="$3"
    interval="$4"
    while true; do
        echo "${tag}${MSG_TAG_SEP}$($cmd)" > "$pipe"
        sleep  "$interval"
    done &
}

main() {
    dir_bin="$1"
    dir_data="$2"
    pipe="$dir_data/pipe"

    WEATHER_STATION_ID='KJFK'

    rm -f "$pipe"
    mkfifo "$pipe"

    spawn produce_datetime  "$pipe" 'in:DATE_TIME' 1
    spawn produce_weather   "$pipe" 'in:WEATHER'   $(( 30 * 60 ))
    spawn produce_bar_req   "$pipe" 'out:BAR'      1
    consume "$pipe"
}

main $@
