#! /bin/bash

set -e

run_producer() {
    bin="$1"
    cmd="$2"
    msg_head="$3"
    "$bin"/$cmd \
    2> >(
        while read line
        do
            echo "ERROR ${msg_head} $line"
        done \
    ) \
    | while read line
        do
            echo "OK ${msg_head} $line"
        done
}

fork_reactor() {
    run_producer "$@" &
}

fork_poller() {
    interval="$1"
    shift
    while :
    do
        run_producer "$@"
        sleep "$interval"
    done &
}

main() {
    declare -A opts=(
        ["--debug"]=0
        ["--dir_bin"]="$HOME/bin"
        ["--weather_station_id"]='KJFK'
        ["--screen_brightness_device_name"]='acpi_video0'
        ["--prefixes_of_net_interfaces_to_show"]='w'  # comma-separated
        ["--disk_space_device"]='/'
        ["--disk_io_device"]='sda'
        ["--thermal_zone"]=0
        ["--fan_path"]='/proc/acpi/ibm/fan'
        ["--interval_inp_datetime"]=1
        ["--interval_inp_brightness"]=1
        ["--interval_inp_weather"]=$(( 30 * 60))  # 30 minutes
        ["--interval_inp_mpd_state"]=1
        ["--interval_inp_mpd_song"]=1
        ["--interval_inp_volume"]=1
        ["--interval_inp_bluetooth"]=5
        ["--interval_inp_net_wifi"]=5
        ["--interval_inp_net_io"]=1
        ["--interval_inp_disk_space"]=5
        ["--interval_inp_disk_io"]=1
        ["--interval_inp_loadavg"]=1
        ["--interval_inp_temp"]=1
        ["--interval_inp_fan"]=1
        ["--interval_inp_mem"]=1
    )
    while :
    do
        key="$1"
        val="$2"
        case "$key" in
            '')
                break
                ;;
            * )
                if [ -v opts["$key"] ]
                then
                    if [ "$key" == "--debug" ]
                    then
                        opts["$key"]=1
                        shift
                    elif [ "$val" != "" ]
                    then
                        opts["$key"]="$val"
                        shift
                        shift
                    else
                        echo "Option $key requires an argument" >&2
                        exit 1
                    fi
                else
                    echo "Unknown option: $key" >&2
                    exit 1
                fi
        esac
    done

    (
        echo '=============================================='
        echo "Khatus starting with the following parameters:"
        echo '=============================================='
        for param in ${!opts[@]}
        do
            echo "$param := ${opts[$param]}"
        done \
        | column -ts: \
        | sort
        echo '----------------------------------------------'
    ) >&2

    screen_brightness_device_path='/sys/class/backlight'
    screen_brightness_device_path+="/${opts['--screen_brightness_device_name']}"

    # Just shorthand
    bin="${opts['--dir_bin']}"

    cmd_sens_screen_brightness='khatus_sensor_screen_brightness'
    cmd_sens_screen_brightness+=" $screen_brightness_device_path"

    cmd_sens_weather="khatus_sensor_weather ${opts['--weather_station_id']}"
    cmd_sens_disk_space="khatus_sensor_disk_space ${opts['--disk_space_device']}"
    cmd_sens_disk_io="khatus_sensor_disk_io ${opts['--disk_io_device']}"
    cmd_sens_temperature="khatus_sensor_temperature ${opts['--thermal_zone']}"
    cmd_sens_fan="khatus_sensor_fan ${opts['--fan_path']}"
    cmd_sens_bluetooth="khatus_sensor_bluetooth_power $bin"
    cmd_sens_mpd_state="khatus_sensor_mpd_state $bin"
    cmd_sens_net_addr_io="khatus_sensor_net_addr_io $bin"
    cmd_sens_volume="khatus_sensor_volume $bin"

    (
        fork_reactor                                       "$bin" "khatus_sensor_energy $bin"     'in:ENERGY'
        fork_poller "${opts['--interval_inp_datetime']}"   "$bin" khatus_sensor_datetime          'in:DATE_TIME'
        fork_poller "${opts['--interval_inp_brightness']}" "$bin" "$cmd_sens_screen_brightness"   'in:SCREEN_BRIGHTNESS'
        fork_poller "${opts['--interval_inp_weather']}"    "$bin" "$cmd_sens_weather"             'in:WEATHER'
        fork_poller "${opts['--interval_inp_mpd_state']}"  "$bin" "$cmd_sens_mpd_state"           'in:MPD_STATE'
        fork_poller "${opts['--interval_inp_mpd_song']}"   "$bin" khatus_sensor_mpd_song          'in:MPD_SONG'
        fork_poller "${opts['--interval_inp_volume']}"     "$bin" "$cmd_sens_volume"              'in:VOLUME'
        fork_poller "${opts['--interval_inp_bluetooth']}"  "$bin" "$cmd_sens_bluetooth"           'in:BLUETOOTH_POWER'
        fork_poller "${opts['--interval_inp_net_wifi']}"   "$bin" khatus_sensor_net_wifi_status   'in:NET_WIFI_STATUS'
        fork_poller "${opts['--interval_inp_net_io']}"     "$bin" "$cmd_sens_net_addr_io"         'in:NET_ADDR_IO'
        fork_poller "${opts['--interval_inp_disk_space']}" "$bin" "$cmd_sens_disk_space"          'in:DISK_SPACE'
        fork_poller "${opts['--interval_inp_disk_io']}"    "$bin" "$cmd_sens_disk_io"             'in:DISK_IO'
        fork_poller "${opts['--interval_inp_loadavg']}"    "$bin" khatus_sensor_loadavg           'in:LOAD_AVG'
        fork_poller "${opts['--interval_inp_temp']}"       "$bin" "$cmd_sens_temperature"         'in:TEMPERATURE'
        fork_poller "${opts['--interval_inp_fan']}"        "$bin" "$cmd_sens_fan"                 'in:FAN'
        fork_poller "${opts['--interval_inp_mem']}"        "$bin" khatus_sensor_memory            'in:MEMORY'
    ) \
    | "$bin"/khatus_controller \
        -v opt_debug="${opts['--debug']}" \
        -v opt_mpd_song_max_chars=10 \
        -v opt_prefixes_of_net_interfaces_to_show="${opts['--prefixes_of_net_interfaces_to_show']}"
}

main $@
